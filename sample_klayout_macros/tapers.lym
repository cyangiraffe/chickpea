<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text># This script generates a directional coupler.
#
# Revision History:
#   Julian Sanders  25 Jun 2019 Initial Revision
#   Julian Sanders  28 Jun 2019 Debugging
#   Julian Sanders  05 Jul 2019 Updated for package name change to
#                               'chickpea' and added generation of
#                               3D FDTD script.
#   Julian Sanders  13 Jul 2019 Updated for changes to the coupler's 
#                               arm parametrization.
#   Julian Sanders  27 Oct 2019 Added instructive comments

import pya    # Module containing KLayout API
#from chickpea import couplers
from chickpea import paths
from chickpea import my_constants

# For debugging chickpea without exiting KLayout
from importlib import reload
#reload(couplers)
reload(paths)
reload(my_constants)

layout = pya.Layout()               # create new layout
top = layout.create_cell("TOP")     # create top-level cell
rib = layout.layer(1, 0)            # create rib waveguide layer

# Generate a taper with a linear profile
lin_taper = paths.linear_taper(layout, 
  0.5,    # left side of the taper is 0.5 um wide
  0.2,    # right side of the tpaer is 0.2 um wide
  10      # taper is 10 um long
)

# Shift the linear taper up by 20 um
lin_taper = lin_taper.transformed(pya.DTrans(pya.DPoint(0, 20)))

para_taper = paths.parabolic_taper(layout, 0.5, 10, 40, origin='port1')

top.shapes(rib).insert(lin_taper)
top.shapes(rib).insert(para_taper)

layout.write(my_constants.gds_models_path
  + "edge_couplers/test_taper.gds")</text>
</klayout-macro>
